##Create React Project with Vite
https://vitejs.dev/guide/

##Remove unwanted code and Files 


##Install Bootstrap and ant design
https://ant.design/
https://getbootstrap.com/
npm install antd bootstrap

// src/index.tsx
import 'bootstrap/dist/css/bootstrap.min.css';
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById('root')
);


##Create folder structure 
  components
  pages 
  layouts 
  types
  app for rtk query  

#Api Using
https://jsonplaceholder.typicode.com/

##Create Interface
interface Post {
    userId: number;
    id?: number;
    title: string;
    body: string;
}
  

##Create Post Slice 

#Start with Get All Post

https://redux-toolkit.js.org/rtk-query/overview

import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

export const postApi = createApi({
  reducerPath: "postApi",
  baseQuery: fetchBaseQuery({
    baseUrl: "https://jsonplaceholder.typicode.com/",
  }),
  tagTypes: ["Post", "Posts"],
  endpoints: (builder) => ({
    getPostById: builder.query<Post, number>({
      query: (id) => `/posts/${id}`,
      providesTags: () => [{ type: "Post" }],
    }),
    getPosts: builder.query<Post[], void>({
      query: () => `/posts`,
      providesTags: () => [{ type: "Posts" }],
    }),
    createPost: builder.mutation<Post, Post>({
      query: (post) => ({
        url: `/posts`,
        method: "POST",
        body: post,
      }),
      invalidatesTags: ["Posts"],
    }),
    updatePost: builder.mutation<Post, Post>({
      query: (post) => ({
        url: `/posts/${post.id}`,
        method: "PUT",
        body: post,
      }),
      invalidatesTags: ["Posts"],
    }),
  }),
});

export const { useGetPostByIdQuery, useLazyGetPostByIdQuery, useGetPostsQuery, useCreatePostMutation, useUpdatePostMutation } = postApi;


import React from 'react';
import { createRoot } from 'react-dom/client'
import 'bootstrap/dist/css/bootstrap.min.css';
import './index.css';
import { store } from './app/store';
import { Provider } from 'react-redux';
import App from './App';

createRoot(document.getElementById('root')!).render(
  <Provider store={store}>
    <App />
  </Provider>
)


##Create Post List Layout or Page 

#Fist Create Post Card 
// src/components/PostCard.tsx
import React from 'react';
import { Card } from 'antd';

interface PostCardProps {
  userId: number;
  id: number;
  title: string;
  body: string;
}

const PostCard: React.FC<PostCardProps> = ({ title, body }) => {
  return (
    <div className="col-md-4 mb-4">
      <Card title={title} bordered={false}>
        <p>{body}</p>
      </Card>
    </div>
  );
};

export default PostCard;


#Second Create Post List Layout

// src/components/PostsList.tsx
import React from 'react';
import PostCard from './PostCard';

interface Post {
  userId: number;
  id: number;
  title: string;
  body: string;
}

interface PostsListProps {
  posts: Post[];
}

const PostsList: React.FC<PostsListProps> = ({ posts }) => {
  return (
    <div className="container">
      <div className="row">
        {posts.map((post) => (
          <PostCard key={post.id} {...post} />
        ))}
      </div>
    </div>
  );
};

export default PostsList;

##Create Modal

import React, { ReactNode } from 'react';
import { Modal } from 'antd';

interface PopupModalType {
    title: string,
    children: ReactNode,
    isOpen: boolean,
    onClickModal: () => void
}

const PopupModal: React.FC<PopupModalType> = ({title, children, isOpen, onClickModal}) => {
  
  const handleOk = () => {
    onClickModal()
  };

  const handleCancel = () => {
    onClickModal()
  };

  return (
      <Modal title={title} open={isOpen} onOk={handleOk} onCancel={handleCancel}>
            {children}
      </Modal>
  );
};

export default PopupModal;

##Create Post Form Component for both create and edit  

// src/components/PostForm.tsx
import React, { useState } from 'react';
import { Form, Input, Button } from 'antd';

interface PostFormProps {
  onAddPost: (post: { title: string; body: string }) => void;
}

const PostForm: React.FC<PostFormProps> = ({ onAddPost }) => {
  const [title, setTitle] = useState('');
  const [body, setBody] = useState('');

  const handleSubmit = () => {
    onAddPost({ title, body });
    setTitle('');
    setBody('');
  };

  return (
    <div className="container mb-4">
      <Form
        layout="vertical"
        onFinish={handleSubmit}
      >
        <Form.Item
          label="Title"
          rules={[{ required: true, message: 'Please enter a title!' }]}
        >
          <Input
            value={title}
            onChange={(e) => setTitle(e.target.value)}
            placeholder="Enter the title"
          />
        </Form.Item>

        <Form.Item
          label="Body"
          rules={[{ required: true, message: 'Please enter the body!' }]}
        >
          <Input.TextArea
            value={body}
            onChange={(e) => setBody(e.target.value)}
            placeholder="Enter the body"
            rows={4}
          />
        </Form.Item>

        <Form.Item>
          <Button type="primary" htmlType="submit">
            Add Post
          </Button>
        </Form.Item>
      </Form>
    </div>
  );
};

export default PostForm;


##Create Create Post Layout 

import React, { useState } from "react";
import { Button } from "antd";
import PopupModal from "../../components/modal";
import PostForm from "../../components/post-form";
import { useCreatePostMutation } from "../../app/services/post.slice";

function CreatePost() {
  const [isOpen, setIsOpen] = useState(false);

  //Implement on create function with rtk query

  return (
    <div>
      <Button type="primary" onClick={() => setIsOpen(true)}>
        Create a Post
      </Button>
      <PopupModal
        isOpen={isOpen}
        title={"Create a post"}
        onClickModal={() => setIsOpen(!isOpen)}
      >
        <PostForm onAddPost={onAddPost}/>
      </PopupModal>
    </div>
  );
}

export default CreatePost;


##Create Edit Post Layout

import React, { useState } from "react";
import { Button } from "antd";
import PopupModal from "../../components/modal";
import PostForm from "../../components/post-form";
import { useUpdatePostMutation } from "../../app/services/post.slice";

function EditPost({ id }: { id: number }) {
  const [isOpen, setIsOpen] = useState(false);
  const [updatePostFunc] = useUpdatePostMutation();

  //Implement on Edit Post function with RTK Query

  return (
    <div>
      <Button type="primary" onClick={() => setIsOpen(true)}>
        Edit
      </Button>
      <PopupModal
        isOpen={isOpen}
        title={"Edit a post"}
        onClickModal={() => setIsOpen(!isOpen)}
      >
        <PostForm id={id} onEditPost={onEditPost} />
      </PopupModal>
    </div>
  );
}

export default EditPost;


##Delelte Post



